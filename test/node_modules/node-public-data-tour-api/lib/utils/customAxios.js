"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
class CustomAxios {
    constructor(customAxios = axios_1.default) {
        this.customAxios = customAxios;
    }
    newAbortSignal(timeoutMs = 3000) {
        const abortController = new AbortController();
        const abortTimeoutId = setTimeout(() => abortController.abort(), timeoutMs);
        return [abortController.signal, abortTimeoutId];
    }
    get(url, config) {
        return __awaiter(this, void 0, void 0, function* () {
            const [signal, abortTimeoutId] = this.newAbortSignal();
            return this.customAxios.get(url, Object.assign(Object.assign({}, config), { signal })).finally(() => {
                clearTimeout(abortTimeoutId);
            });
        });
    }
}
exports.default = new CustomAxios();
//# sourceMappingURL=customAxios.js.map